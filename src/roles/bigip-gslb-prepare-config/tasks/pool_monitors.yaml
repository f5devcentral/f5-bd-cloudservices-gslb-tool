---


- name: ">>>> set Normalized variables for pool's monitor"
  set_fact:
    hostNormalized: "{{ item.host.split('.')[0] | regex_replace('[-.]', '_') }}"
    pathNormalized: "{{ path | regex_replace('/', '_')}}"
    poolGslbRecordNormalized: "pool_{{ item.host | regex_replace('[-.]', '_') }}"

- name: ">>>> Generating file name for pool's monitor >>> {{protocol}} >> {{item.host}} >> {{ path }}"
  set_fact:
    outfile: "files.output/backend-{{GSLB_DOMAIN}}/{{item.project}}/bigip-gslb-pool_monitor_{{protocol}}_{{item.host}}_{{pathNormalized}}.json"

- name: ">>>> Stat file {{outfile}}"
  stat:
    path: "{{outfile}}"
    get_checksum: no
    get_mime: no
  register: check_outfile

- name: ">>>> Generating file for pool's monitor >>> {{protocol}} >> {{item.host}} >> {{ path }}"
  block:
    - name: ">>>>> set monitor name"
      set_fact:
        monitor: "{{ 'monitor_' + protocol + '_' + hostNormalized + '_' + pathNormalized }}"

    - name: ">>>>> set monitor JSON"
      set_fact:
        monitor_json: '{ "use": "/Common/Shared/{{monitor}}" }'

    - name: ">>>>> Save monitor JSON"
      copy: content="{{monitor_json}}" dest="{{outfile}}"
  when: check_outfile.stat.exists == false

- name: ">>>> Stat file {{outfile}}.included"
  stat:
    path: "{{outfile}}.included"
    get_checksum: no
    get_mime: no
  register: check_outfile_included

- name: ">>>>> conditionally add pool monitor into pool JSON document"
  block:
    - name: ">>>>> Add monitors element into the pool JSON document"
      include_tasks: library/json-add-array-element.yaml
      vars:
        node: "{{outfile}}"
        branch: ".{{poolGslbRecordNormalized}}.monitors"
        base: "files.output/backend-{{GSLB_DOMAIN}}/{{item.project}}/bigip-gslb-pool_{{item.host}}.json"

    - name: ">>>>> mark file as included"
      file:
        path: "{{outfile}}.included"
        state: touch

  when: check_outfile_included.stat.exists == false

