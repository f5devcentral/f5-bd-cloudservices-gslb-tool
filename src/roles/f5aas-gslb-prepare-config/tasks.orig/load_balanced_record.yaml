---

- name: "Generating file name for load balancing record >>> {{item.host}}"
  set_fact:
    outfile: "files.output/backend-{{GSLB_DOMAIN}}/f5aas-gslb-load_balanced_record-global.{{ item.host }}.json"

- name: "Stat file {{outfile}}"
  stat: "path={{outfile}}"
  register: check_outfile

- name: "Generating file for load balancing record >>> {{item.host}}"
  block:
    - name: prepare the load balanced record JSON object, copy the template file
      delegate_to: localhost
      shell: |
        set -e
        set -x
        cp "files.input/f5aas-gslb-load_balanced_record-global.tmpl.json" "{{outfile}}"

    - name: prepare the load balanced record JSON object, parametrize the template file
      delegate_to: localhost
      replace:
        path: "{{outfile}}"
        regexp: "{{ inner.expr }}"
        replace: "{{ inner.replace }}"
      with_items:
          - { expr: '%%host%%', replace: "{{ item.host.split('.')[0] }}" }
          - { expr: '%%hostNormalized%%', replace: "{{ item.host.split('.')[0] | regex_replace('[-.]', '_') }}" }
          - { expr: '%%alias%%', replace: "{{ item.host | regex_replace('\\..*', '') }}" }
      loop_control:
        loop_var: inner
  when: check_outfile.stat.exists == false

- name: "Stat file {{outfile}}.included"
  stat:
    path: "{{outfile}}.included"
    get_checksum: no
    get_mime: no
  register: check_outfile_included

- name: conditionally add load balanced record JSON document
  block:
    - name: add load balanced record JSON document
      include_tasks: library/json-add-dict-element.yaml
      vars:
        node: "{{outfile}}"
        branch: ".configuration.gslb_service.load_balanced_records"
        leaf: "{{ item.host | regex_replace('[-.]', '_') }}"
        base: "files.output/backend-{{GSLB_DOMAIN}}/f5aas-gslb-update-subscription.tmpl.json"
    - name: mark file as included
      file:
        path: "{{outfile}}.included"
        state: touch
  when: check_outfile_included.stat.exists == false


