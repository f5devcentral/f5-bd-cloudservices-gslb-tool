---

- name: "pool.yaml: show iterator"
  debug:
    msg: "pool.yaml: iterator is {{item}}"
  when: VERBOSE == "true"

- name: "Generating file name for pool >>> {{item.host}}"
  set_fact:
    outfile: "files.output/backend-{{GSLB_DOMAIN}}/f5aas-gslb-pool_{{item.host}}.json"

- name: "Stat file {{outfile}}"
  stat: 
    path: "{{outfile}}"
    get_checksum: no
    get_mime: no
  register: check_outfile

- name: "Generating file for pool >>> {{item.host}}"
  block:
    - name: prepare pool JSON objects, copy the template file
      delegate_to: localhost
      shell: |
        set -e
        cp "files.input/f5aas-gslb-pool.tmpl.json" "{{outfile}}"

    - name: prepare pool JSON objects, parametrize the template file
      delegate_to: localhost
      replace:
        path: "{{outfile}}"
        regexp: "{{ inner.expr }}"
        replace: "{{ inner.replace }}"
      with_items:
          - { expr: '%%host%%', replace: "{{ item.host.split('.')[0] }}" }
          - { expr: '%%hostNormalized%%', replace: "{{ item.host.split('.')[0] | regex_replace('[-.]', '_') }}" }
          - { expr: '%%ttl%%', replace: "{{item.ttl}}" }
      loop_control:
        loop_var: inner
  when: check_outfile.stat.exists == false

- name: "Stat file {{outfile}}.included"
  stat:
    path: "{{outfile}}.included"
    get_checksum: no
    get_mime: no
  register: check_outfile_included

- name: conditionally add pool JSON document
  block:
    - name: add pool JSON document
      include_tasks: library/json-add-dict-element.yaml
      vars:
        node: "{{outfile}}"
        branch: ".configuration.gslb_service.pools"
        leaf: ""
        base: "files.output/backend-{{GSLB_DOMAIN}}/f5aas-gslb-update-subscription.tmpl.json"
    - name: mark file as included
      file:
        path: "{{outfile}}.included"
        state: touch
  when: check_outfile_included.stat.exists == false

- name: "set query for pool members for host {{item.host}}"
  set_fact:
    query_pool_members: "[?(({{query_expression}}) && (host == '{{item.host}}'))].{host: host, ratio: ratio, l7router: l7router, publicAddress: publicAddress }"

- name: show
  debug:
    msg: "{{query_pool_members}}"
  when: VERBOSE == "true"

- name: prepare the pool JSON object, create pool members
  include_tasks: pool_l7router_loop.yaml
  with_items: '{{ gslbState | json_query(query_pool_members) }}'
  loop_control: 
    loop_var: inner

